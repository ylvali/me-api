function cov_wyzd254yr(){var path="/mnt/c/Users/ylva/dbwebbkurser/jsramverk/2023version/yso/appBTHv2/backendBTH/app.js";var hash="bddb9316fb91739a758dc572abba87084caa7da7";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/mnt/c/Users/ylva/dbwebbkurser/jsramverk/2023version/yso/appBTHv2/backendBTH/app.js",statementMap:{"0":{start:{line:5,column:16},end:{line:5,column:34}},"1":{start:{line:8,column:15},end:{line:8,column:32}},"2":{start:{line:12,column:13},end:{line:12,column:28}},"3":{start:{line:15,column:19},end:{line:15,column:41}},"4":{start:{line:18,column:12},end:{line:18,column:21}},"5":{start:{line:19,column:13},end:{line:19,column:17}},"6":{start:{line:21,column:0},end:{line:21,column:27}},"7":{start:{line:22,column:0},end:{line:22,column:51}},"8":{start:{line:25,column:16},end:{line:25,column:44}},"9":{start:{line:26,column:11},end:{line:26,column:52}},"10":{start:{line:29,column:0},end:{line:29,column:16}},"11":{start:{line:33,column:0},end:{line:33,column:27}},"12":{start:{line:34,column:0},end:{line:34,column:51}},"13":{start:{line:37,column:0},end:{line:40,column:1}},"14":{start:{line:39,column:4},end:{line:39,column:32}},"15":{start:{line:44,column:0},end:{line:48,column:3}},"16":{start:{line:45,column:4},end:{line:45,column:28}},"17":{start:{line:46,column:4},end:{line:46,column:26}},"18":{start:{line:47,column:4},end:{line:47,column:11}},"19":{start:{line:57,column:13},end:{line:57,column:36}},"20":{start:{line:58,column:17},end:{line:58,column:46}},"21":{start:{line:61,column:15},end:{line:61,column:37}},"22":{start:{line:71,column:14},end:{line:71,column:39}},"23":{start:{line:72,column:14},end:{line:72,column:39}},"24":{start:{line:73,column:15},end:{line:73,column:45}},"25":{start:{line:74,column:16},end:{line:74,column:44}},"26":{start:{line:76,column:0},end:{line:76,column:20}},"27":{start:{line:77,column:0},end:{line:77,column:25}},"28":{start:{line:78,column:0},end:{line:78,column:29}},"29":{start:{line:79,column:0},end:{line:79,column:28}},"30":{start:{line:83,column:0},end:{line:93,column:3}},"31":{start:{line:84,column:4},end:{line:84,column:58}},"32":{start:{line:85,column:4},end:{line:85,column:33}},"33":{start:{line:87,column:4},end:{line:92,column:7}},"34":{start:{line:96,column:0},end:{line:114,column:3}},"35":{start:{line:98,column:19},end:{line:98,column:32}},"36":{start:{line:99,column:16},end:{line:99,column:45}},"37":{start:{line:100,column:4},end:{line:107,column:7}},"38":{start:{line:101,column:8},end:{line:105,column:9}},"39":{start:{line:103,column:12},end:{line:103,column:39}},"40":{start:{line:104,column:12},end:{line:104,column:41}},"41":{start:{line:106,column:8},end:{line:106,column:35}},"42":{start:{line:109,column:4},end:{line:113,column:7}},"43":{start:{line:118,column:0},end:{line:120,column:3}},"44":{start:{line:119,column:4},end:{line:119,column:27}},"45":{start:{line:123,column:0},end:{line:130,column:3}},"46":{start:{line:124,column:17},end:{line:128,column:5}},"47":{start:{line:129,column:4},end:{line:129,column:19}},"48":{start:{line:136,column:0},end:{line:140,column:3}},"49":{start:{line:137,column:14},end:{line:137,column:36}},"50":{start:{line:138,column:4},end:{line:138,column:21}},"51":{start:{line:139,column:4},end:{line:139,column:14}},"52":{start:{line:142,column:0},end:{line:156,column:3}},"53":{start:{line:143,column:4},end:{line:145,column:5}},"54":{start:{line:144,column:8},end:{line:144,column:25}},"55":{start:{line:147,column:4},end:{line:155,column:7}},"56":{start:{line:163,column:15},end:{line:163,column:92}},"57":{start:{line:163,column:38},end:{line:163,column:91}},"58":{start:{line:165,column:0},end:{line:165,column:24}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:44,column:8},end:{line:44,column:9}},loc:{start:{line:44,column:28},end:{line:48,column:1}},line:44},"1":{name:"(anonymous_1)",decl:{start:{line:83,column:18},end:{line:83,column:19}},loc:{start:{line:83,column:32},end:{line:93,column:1}},line:83},"2":{name:"(anonymous_2)",decl:{start:{line:96,column:25},end:{line:96,column:26}},loc:{start:{line:96,column:39},end:{line:114,column:1}},line:96},"3":{name:"(anonymous_3)",decl:{start:{line:100,column:46},end:{line:100,column:47}},loc:{start:{line:100,column:69},end:{line:107,column:5}},line:100},"4":{name:"(anonymous_4)",decl:{start:{line:118,column:17},end:{line:118,column:18}},loc:{start:{line:118,column:31},end:{line:120,column:1}},line:118},"5":{name:"(anonymous_5)",decl:{start:{line:123,column:23},end:{line:123,column:24}},loc:{start:{line:123,column:37},end:{line:130,column:1}},line:123},"6":{name:"(anonymous_6)",decl:{start:{line:136,column:8},end:{line:136,column:9}},loc:{start:{line:136,column:28},end:{line:140,column:1}},line:136},"7":{name:"(anonymous_7)",decl:{start:{line:142,column:8},end:{line:142,column:9}},loc:{start:{line:142,column:33},end:{line:156,column:1}},line:142},"8":{name:"(anonymous_8)",decl:{start:{line:163,column:32},end:{line:163,column:33}},loc:{start:{line:163,column:38},end:{line:163,column:91}},line:163}},branchMap:{"0":{loc:{start:{line:37,column:0},end:{line:40,column:1}},type:"if",locations:[{start:{line:37,column:0},end:{line:40,column:1}},{start:{line:37,column:0},end:{line:40,column:1}}],line:37},"1":{loc:{start:{line:101,column:8},end:{line:105,column:9}},type:"if",locations:[{start:{line:101,column:8},end:{line:105,column:9}},{start:{line:101,column:8},end:{line:105,column:9}}],line:101},"2":{loc:{start:{line:143,column:4},end:{line:145,column:5}},type:"if",locations:[{start:{line:143,column:4},end:{line:145,column:5}},{start:{line:143,column:4},end:{line:145,column:5}}],line:143},"3":{loc:{start:{line:147,column:15},end:{line:147,column:32}},type:"binary-expr",locations:[{start:{line:147,column:15},end:{line:147,column:25}},{start:{line:147,column:29},end:{line:147,column:32}}],line:147}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"bddb9316fb91739a758dc572abba87084caa7da7"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_wyzd254yr=function(){return actualCoverage;};}return actualCoverage;}cov_wyzd254yr();/*jshint esversion: 6 */ // Express app 
const express=(cov_wyzd254yr().s[0]++,require("express"));// MORGAN for inloggning
const morgan=(cov_wyzd254yr().s[1]++,require('morgan'));// Cross-Origin Resource Sharing (CORS)
// 3e parts modul för att andra domäner ska kunna hämta info ifrån våran app
const cors=(cov_wyzd254yr().s[2]++,require('cors'));// Parse the extra params with PUT/POST/DELETE
const bodyParser=(cov_wyzd254yr().s[3]++,require("body-parser"));// Express app
const app=(cov_wyzd254yr().s[4]++,express());const port=(cov_wyzd254yr().s[5]++,8333);//console.log('Running on port' +port);
cov_wyzd254yr().s[6]++;app.use(bodyParser.json());// for parsing application/json
cov_wyzd254yr().s[7]++;app.use(bodyParser.urlencoded({extended:true}));// for parsing application/x-www-form-urlencoded
// Use sqlite database & run it
const sqlite3=(cov_wyzd254yr().s[8]++,require('sqlite3').verbose());const db=(cov_wyzd254yr().s[9]++,new sqlite3.Database('./db/texts.sqlite'));// Use cors
cov_wyzd254yr().s[10]++;app.use(cors());// Enable to send req.body (request body) med POST
// till exempel via Postman
cov_wyzd254yr().s[11]++;app.use(bodyParser.json());// for parsing application/json
cov_wyzd254yr().s[12]++;app.use(bodyParser.urlencoded({extended:true}));// for parsing application/x-www-form-urlencoded
// don't show the log when it is test
cov_wyzd254yr().s[13]++;if(process.env.NODE_ENV!=='test'){cov_wyzd254yr().b[0][0]++;cov_wyzd254yr().s[14]++;// use morgan to log at command line
app.use(morgan('combined'));// 'combined' outputs the Apache style LOGs
}else{cov_wyzd254yr().b[0][1]++;}// This is middleware called for all routes.
// Middleware takes three parameters.
cov_wyzd254yr().s[15]++;app.use((req,res,next)=>{cov_wyzd254yr().f[0]++;cov_wyzd254yr().s[16]++;console.log(req.method);cov_wyzd254yr().s[17]++;console.log(req.path);cov_wyzd254yr().s[18]++;next();});// Json webtokens 
// A secure way of using tokens for login etc. 
// Using an environmental variable
// JWT secret set in the environment : server & process 
// (Change longsecret to something of many characters & difficult)
// $export JWT_SECRET='R_[/_&g2Upsl5I3]uQ]K<2o|J' // run this in the terminal where the app is run
const jwt=(cov_wyzd254yr().s[19]++,require('jsonwebtoken'));const payload=(cov_wyzd254yr().s[20]++,{email:"user@example.com"});// JWT secret set in the script 
const secret=(cov_wyzd254yr().s[21]++,process.env.JWT_SECRET);// using the secret token on your server & local environment
// Create the token sign 
// The token is created in the method below
var token;// ROUTES
// Add a route
// Require routes - routes that are stored in a catalog/directory
// Use the main name with a subcatalog
const index=(cov_wyzd254yr().s[22]++,require('./routes/index'));const hello=(cov_wyzd254yr().s[23]++,require('./routes/hello'));const reports=(cov_wyzd254yr().s[24]++,require('./routes/reportsReg'));const registry=(cov_wyzd254yr().s[25]++,require('./routes/registry'));cov_wyzd254yr().s[26]++;app.use('/',index);cov_wyzd254yr().s[27]++;app.use('/hello',hello);cov_wyzd254yr().s[28]++;app.use('/reports',reports);cov_wyzd254yr().s[29]++;app.use('/users',registry);// Get new token
cov_wyzd254yr().s[30]++;app.get("/token",(req,res)=>{cov_wyzd254yr().f[1]++;cov_wyzd254yr().s[31]++;token=jwt.sign(payload,secret,{expiresIn:'1h'});// here is your token
cov_wyzd254yr().s[32]++;console.log('Token: '+token);cov_wyzd254yr().s[33]++;res.json({data:{msg:"Token: "+token,token:token}});});// Verify token
cov_wyzd254yr().s[34]++;app.post("/verifyToken",(req,res)=>{cov_wyzd254yr().f[2]++;// Control that the token functions
var response=(cov_wyzd254yr().s[35]++,'valid token');var token=(cov_wyzd254yr().s[36]++,req.headers['x-access-token']);cov_wyzd254yr().s[37]++;jwt.verify(token,process.env.JWT_SECRET,function(err,decoded){cov_wyzd254yr().f[3]++;cov_wyzd254yr().s[38]++;if(err){cov_wyzd254yr().b[1][0]++;cov_wyzd254yr().s[39]++;// not a valid token
response='invalid token';cov_wyzd254yr().s[40]++;console.log('Invalid token');}else{cov_wyzd254yr().b[1][1]++;}cov_wyzd254yr().s[41]++;console.log('Valid token');});cov_wyzd254yr().s[42]++;res.json({data:{msg:"Token: "+response}});});// Test put & a status
cov_wyzd254yr().s[43]++;app.put("/test",(req,res)=>{cov_wyzd254yr().f[4]++;cov_wyzd254yr().s[44]++;res.status(204).send();});// Test a message
cov_wyzd254yr().s[45]++;app.get("/hello/:msg",(req,res)=>{cov_wyzd254yr().f[5]++;const data=(cov_wyzd254yr().s[46]++,{data:{msg:req.params.msg}});cov_wyzd254yr().s[47]++;res.json(data);});// Add routes for 404 and error handling
// Catch 404 and forward to error handler
// Put this last
cov_wyzd254yr().s[48]++;app.use((req,res,next)=>{cov_wyzd254yr().f[6]++;var err=(cov_wyzd254yr().s[49]++,new Error("Not Found"));cov_wyzd254yr().s[50]++;err.status=404;cov_wyzd254yr().s[51]++;next(err);});cov_wyzd254yr().s[52]++;app.use((err,req,res,next)=>{cov_wyzd254yr().f[7]++;cov_wyzd254yr().s[53]++;if(res.headersSent){cov_wyzd254yr().b[2][0]++;cov_wyzd254yr().s[54]++;return next(err);}else{cov_wyzd254yr().b[2][1]++;}cov_wyzd254yr().s[55]++;res.status((cov_wyzd254yr().b[3][0]++,err.status)||(cov_wyzd254yr().b[3][1]++,500)).json({"errors":[{"status":err.status,"title":err.message,"detail":err.message}]});});// Start up server
//app.listen(port, () => console.log(`Example API listening on port ${port}!`));
// To import server into the test files & call the server 
// testfiles: test/reports/report_integration.js
const server=(cov_wyzd254yr().s[56]++,app.listen(port,()=>{cov_wyzd254yr().f[8]++;cov_wyzd254yr().s[57]++;return console.log(`Example app listening on port ${port}!`);}));cov_wyzd254yr().s[58]++;module.exports=server;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,